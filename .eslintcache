[{"C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\index.js":"1","C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\App.js":"2","C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\components\\Details\\Details.jsx":"3","C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\components\\Details\\styles.js":"4","C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\styles.js":"5","C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\components\\Main\\Main.jsx":"6","C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\components\\Main\\styles.js":"7","C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\components\\Main\\Form\\Form.jsx":"8","C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\components\\Main\\Form\\styles.js":"9","C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\components\\Main\\List\\List.jsx":"10","C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\components\\Main\\List\\styles.js":"11","C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\context\\context.js":"12","C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\context\\contextReducer.js":"13","C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\constants\\categories.js":"14","C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\utils\\formatDate.js":"15","C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\useTransactions.js":"16"},{"size":428,"mtime":1608812287444,"results":"17","hashOfConfig":"18"},{"size":1019,"mtime":1608812397952,"results":"19","hashOfConfig":"18"},{"size":681,"mtime":1608805778822,"results":"20","hashOfConfig":"18"},{"size":247,"mtime":1608700040170,"results":"21","hashOfConfig":"18"},{"size":582,"mtime":1608700123697,"results":"22","hashOfConfig":"18"},{"size":1291,"mtime":1608868358337,"results":"23","hashOfConfig":"18"},{"size":514,"mtime":1608700560210,"results":"24","hashOfConfig":"18"},{"size":4966,"mtime":1608816531955,"results":"25","hashOfConfig":"18"},{"size":247,"mtime":1608723664805,"results":"26","hashOfConfig":"18"},{"size":1717,"mtime":1608802944965,"results":"27","hashOfConfig":"18"},{"size":416,"mtime":1608727170461,"results":"28","hashOfConfig":"18"},{"size":1394,"mtime":1608818043443,"results":"29","hashOfConfig":"18"},{"size":710,"mtime":1608817004987,"results":"30","hashOfConfig":"18"},{"size":1765,"mtime":1608803367649,"results":"31","hashOfConfig":"18"},{"size":353,"mtime":1608804155702,"results":"32","hashOfConfig":"18"},{"size":1173,"mtime":1608805658073,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1gni64y",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\index.js",[],["71","72"],"C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\App.js",[],"C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\components\\Details\\Details.jsx",[],"C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\components\\Details\\styles.js",[],"C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\styles.js",[],"C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\components\\Main\\Main.jsx",[],"C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\components\\Main\\styles.js",[],"C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\components\\Main\\Form\\Form.jsx",["73"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\nimport formatDate from \"../../../utils/formatDate\";\r\nimport { ExpenseTrackerContext } from \"../../../context/context\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useSpeechContext } from \"@speechly/react-client\";\r\nimport {\r\n  incomeCategories,\r\n  expenseCategories,\r\n} from \"../../../constants/categories\";\r\n\r\nconst initialState = {\r\n  amount: \"\",\r\n  category: \"\",\r\n  type: \"\",\r\n  date: formatDate(new Date()),\r\n};\r\nconst Form = () => {\r\n  const classes = useStyles();\r\n  const [formData, setFormData] = useState(initialState);\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const { segment } = useSpeechContext();\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes(\"-\"))\r\n      return;\r\n\r\n    const transaction = {\r\n      ...formData,\r\n      amount: Number(formData.amount),\r\n      id: uuidv4(),\r\n    };\r\n\r\n    addTransaction(transaction);\r\n    setFormData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === \"add_expense\") {\r\n        setFormData({ ...formData, type: \"Expense\" });\r\n      } else if (segment.intent.intent === \"add_income\") {\r\n        setFormData({ ...formData, type: \"Income\" });\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === \"create_transaction\"\r\n      ) {\r\n        return createTransaction();\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === \"cancel_transaction\"\r\n      ) {\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((s) => {\r\n        const category = `${s.value.charAt(0)}${s.value\r\n          .slice(1)\r\n          .toLowerCase()}`;\r\n\r\n        switch (s.type) {\r\n          case \"amount\":\r\n            setFormData({ ...formData, amount: s.value });\r\n            break;\r\n          case \"category\":\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: \"Income\", category });\r\n            } else if (\r\n              expenseCategories.map((iC) => iC.type).includes(category)\r\n            ) {\r\n              setFormData({ ...formData, type: \"Expense\", category });\r\n            }\r\n            break;\r\n          case \"date\":\r\n            setFormData({ ...formData, date: s.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      if (\r\n        segment.isFinal &&\r\n        formData.amount &&\r\n        formData.category &&\r\n        formData.type &&\r\n        formData.date\r\n      ) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n  const selectedCategories =\r\n    formData.type === \"Income\" ? incomeCategories : expenseCategories;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterButton>\r\n          {segment && segment.words.map((w) => w.value).join(\" \")}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select\r\n            value={formData.type}\r\n            onChange={(e) => setFormData({ ...formData, type: e.target.value })}\r\n          >\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select\r\n            value={formData.category}\r\n            onChange={(e) =>\r\n              setFormData({ ...formData, category: e.target.value })\r\n            }\r\n          >\r\n            {selectedCategories.map((c) => (\r\n              <MenuItem key={c.type} value={c.type}>\r\n                {c.type}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          type=\"number\"\r\n          label=\"Amount\"\r\n          fullWidth\r\n          value={formData.amount}\r\n          onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          type=\"date\"\r\n          label=\"Date\"\r\n          fullWidth\r\n          value={formData.date}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, date: formatDate(e.target.value) })\r\n          }\r\n        />\r\n      </Grid>\r\n      <Button\r\n        className={classes.button}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        fullWidth\r\n        onClick={createTransaction}\r\n      >\r\n        Create\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\components\\Main\\Form\\styles.js",[],"C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\components\\Main\\List\\List.jsx",[],"C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\components\\Main\\List\\styles.js",[],["74","75"],"C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\context\\context.js",[],"C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\context\\contextReducer.js",["76"],"// Reduer => a function that takes the old state and action and returns a new state\r\n\r\nimport { StarRateOutlined } from \"@material-ui/icons\";\r\n\r\nconst contextReducer = (state, action) => {\r\n  let transactions;\r\n\r\n  switch (action.type) {\r\n    case \"DELETE_TRANSACTION\":\r\n      transactions = state.filter((t) => t.id !== action.payload);\r\n\r\n      localStorage.setItem(\"transactions\", JSON.stringify(transactions));\r\n\r\n      return transactions;\r\n    case \"ADD_TRANSACTION\":\r\n      transactions = [action.payload, ...state];\r\n\r\n      localStorage.setItem(\"transactions\", JSON.stringify(transactions));\r\n\r\n      return transactions;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default contextReducer;\r\n","C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\constants\\categories.js",[],"C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\utils\\formatDate.js",["77"],"const formatDate = (date) => {\r\n  const d = new Date(date);\r\n  let month = `${d.getMonth() + 1}`;\r\n  const day = `${d.getDate()}`;\r\n  const year = d.getFullYear();\r\n\r\n  if (month.length < 2) {\r\n    month = `0${month}`;\r\n  }\r\n  if (day.length < 2) {\r\n    day = `0${day}`;\r\n  }\r\n\r\n  return [year, month, day].join(\"-\");\r\n};\r\n\r\nexport default formatDate;\r\n","C:\\Users\\SWAPNIL\\OneDrive\\Desktop\\expense\\src\\useTransactions.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":102,"column":6,"nodeType":"84","endLine":102,"endColumn":15,"suggestions":"85"},{"ruleId":"78","replacedBy":"86"},{"ruleId":"80","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":26},{"ruleId":"92","severity":1,"message":"93","line":11,"column":5,"nodeType":"90","messageId":"94","endLine":11,"endColumn":8},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["97"],["95"],["96"],"no-unused-vars","'StarRateOutlined' is defined but never used.","Identifier","unusedVar","no-const-assign","'day' is constant.","const","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"100","text":"101"},[2853,2862],"[createTransaction, formData, segment]"]